version: '3'
services:
  web:
    container_name: nginx
    image: nginx
    # volumes:
    #   - ./nginx/nginx.conf:/tmp/nginx.conf
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/templates/default.conf.template
    environment: 
      - FLASK_SERVER_ADDR=backend:9091
      - DB_PASSWORD=password
      - DB_USER=aquamon
      - DB_NAME=aquamon
      - DB_HOST=mysql 
    # command: /bin/bash -c "envsubst < /tmp/nginx.conf > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'" 
    ports:
      - 80:80
    depends_on:
      - backend
    
  backend:
    container_name: app
    build: flask
    environment:
      - FLASK_SERVER_PORT=9091
      - DB_PASSWORD=password
      - HTTP_OR_HTTPS=HTTP
    volumes:
      - flask:/tmp/app_data
    restart: unless-stopped
    depends_on:
      - mysql

  grafana:
    build: ./grafana
    restart: always
    container_name: grafana
    ports:
      - 3000:3000
    # networks:
    #   - local
    depends_on:
      - mysql

  framework:
    image: framework
    build: framework
    volumes:
      - framework:/tmp/framework_data
    ports:
      - 9999:9999
    # networks:
    #   - local
    depends_on:
      - mysql

  php-apache-environment:
    container_name: php-apache
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    volumes:
      - ./dashboard:/var/www/html/
    ports:
      - 8000:80
    depends_on:
      - mysql

  mysql:
    container_name: mysql
    image: mysql
    # volumes:
    #   - mysql:/tmp/mysql_data
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d
      - mysql:/var/lib/mysql
    environment:
       - MYSQL_ROOT_PASSWORD=password
       - MYSQL_DATABASE=aquamon
       - MYSQL_USER=aquamon
       - MYSQL_PASSWORD=password
    ports:
      - 3306:3306
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - '8080:80'
    restart: always
    environment:
      - PMA_HOST=mysql
      - PMA_USER=aquamon
      - PMA_PASSWORD=password
      - MYSQL_ROOT_PASSWORD=password
    depends_on:
      - mysql

# networks:
#   local:
      
volumes:
  flask:
  framework:
  mysql:
  grafana_data:
    